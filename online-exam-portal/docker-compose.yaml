version: '3'

services:
  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
     - 8080:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
    links:
     - "mongodb"

  backend:
    build: ./backend
    environment:
      - NODE_ENV=docker
    ports:
      - "80:80"
    depends_on:
      - mongodb

  frontend:
    build: ./frontend
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=docker
      - REACT_APP_API_BASE_URL=http://backend:80
    depends_on:
      - backend
  
  user_frontend:
    build: ./user-portal-frontend
    ports:
      - "3200:3000"
    environment:
      - NODE_ENV=docker
      - REACT_APP_API_BASE_URL=http://backend:80
    depends_on:
      - backend
      - frontend

volumes:
  mongo-data:

# version: '3'

# services:
#   backend:
#     container_name: backend-app
#     image: backend-app:1.0
#     environment:
#       - NODE_ENV=docker
#     build:
#       context: backend
#       dockerfile: Dockerfile
#     ports:
#       - 5000:5000
#     links:
#       - mongodb


#   mongodb:
#     image: mongo
#     ports:
#      - 27018:27017
#     environment:
#      - MONGO_INITDB_ROOT_USERNAME=admin
#      - MONGO_INITDB_ROOT_PASSWORD=password
#     volumes:
#      - mongo-data:/data/db
#     healthcheck:
#       test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
#       interval: 10s
#       timeout: 10s
#       retries: 5
#       start_period: 40s

#   mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#      - 8080:8081
#     environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
#      - ME_CONFIG_MONGODB_SERVER=mongodb
#     depends_on:
#      - "mongodb"
      
  
#   frontend:
#     container_name: frontend-app
#     image: frontend-app:1.0
#     environment:
#       - NODE_ENV=docker
#       - REACT_APP_API_BASE_URL=http://backend:5000
      
#     build: 
#       context: frontend
#       dockerfile: Dockerfile
#     ports:
#      - 3100:3000
#     depends_on:
#      - backend

#   user-frontend:
#     container_name: user-frontend-app
#     image: user-frontend-app:1.0
#     environment:
#       - NODE_ENV=docker
#       - REACT_APP_API_BASE_URL=http://backend:5000
#     build:
#       context: user-portal-frontend
#       dockerfile: Dockerfile

#     ports:

#       - 3200:3000


#     depends_on:
#       - backend
#       - frontend

# volumes:
#   mongo-data:
#     driver: local